// Code generated by protoc-gen-go. DO NOT EDIT.
// source: service.proto

package pb

import (
	fmt "fmt"

	proto "github.com/golang/protobuf/proto"

	math "math"

	any "github.com/golang/protobuf/ptypes/any"

	context "golang.org/x/net/context"

	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Request struct {
	ApiKey               string   `protobuf:"bytes,1,opt,name=ApiKey,proto3" json:"ApiKey,omitempty"`
	Search               string   `protobuf:"bytes,2,opt,name=Search,proto3" json:"Search,omitempty"`
	Page                 string   `protobuf:"bytes,3,opt,name=Page,proto3" json:"Page,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Request) Reset()         { *m = Request{} }
func (m *Request) String() string { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()    {}
func (*Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_32a10d1cfcb2f5c4, []int{0}
}
func (m *Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Request.Unmarshal(m, b)
}
func (m *Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Request.Marshal(b, m, deterministic)
}
func (dst *Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Request.Merge(dst, src)
}
func (m *Request) XXX_Size() int {
	return xxx_messageInfo_Request.Size(m)
}
func (m *Request) XXX_DiscardUnknown() {
	xxx_messageInfo_Request.DiscardUnknown(m)
}

var xxx_messageInfo_Request proto.InternalMessageInfo

func (m *Request) GetApiKey() string {
	if m != nil {
		return m.ApiKey
	}
	return ""
}

func (m *Request) GetSearch() string {
	if m != nil {
		return m.Search
	}
	return ""
}

func (m *Request) GetPage() string {
	if m != nil {
		return m.Page
	}
	return ""
}

type Response struct {
	Result               *any.Any `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_32a10d1cfcb2f5c4, []int{1}
}
func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (dst *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(dst, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetResult() *any.Any {
	if m != nil {
		return m.Result
	}
	return nil
}

func init() {
	proto.RegisterType((*Request)(nil), "proto.Request")
	proto.RegisterType((*Response)(nil), "proto.Response")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MoviesServiceClient is the client API for MoviesService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MoviesServiceClient interface {
	SearchMovies(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
}

type moviesServiceClient struct {
	cc *grpc.ClientConn
}

func NewMoviesServiceClient(cc *grpc.ClientConn) MoviesServiceClient {
	return &moviesServiceClient{cc}
}

func (c *moviesServiceClient) SearchMovies(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/proto.MoviesService/SearchMovies", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MoviesServiceServer is the server API for MoviesService service.
type MoviesServiceServer interface {
	SearchMovies(context.Context, *Request) (*Response, error)
}

func RegisterMoviesServiceServer(s *grpc.Server, srv MoviesServiceServer) {
	s.RegisterService(&_MoviesService_serviceDesc, srv)
}

func _MoviesService_SearchMovies_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MoviesServiceServer).SearchMovies(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.MoviesService/SearchMovies",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MoviesServiceServer).SearchMovies(ctx, req.(*Request))
	}
	return interceptor(ctx, in, info, handler)
}

var _MoviesService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.MoviesService",
	HandlerType: (*MoviesServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SearchMovies",
			Handler:    _MoviesService_SearchMovies_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "service.proto",
}

func init() { proto.RegisterFile("service.proto", fileDescriptor_service_32a10d1cfcb2f5c4) }

var fileDescriptor_service_32a10d1cfcb2f5c4 = []byte{
	// 198 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x3c, 0x8f, 0x41, 0xcb, 0x82, 0x40,
	0x10, 0x86, 0xf1, 0xfb, 0xca, 0x6a, 0xca, 0x82, 0x25, 0xc2, 0x3c, 0x85, 0xa7, 0x0e, 0xb1, 0x82,
	0x5d, 0x3a, 0xe6, 0x39, 0x84, 0x58, 0x7f, 0x81, 0xca, 0x64, 0x82, 0xb8, 0xb6, 0xab, 0x82, 0xff,
	0x3e, 0xda, 0xb1, 0x4e, 0xbb, 0xcf, 0xc3, 0xec, 0xbe, 0xef, 0x80, 0xa3, 0x51, 0xf5, 0x65, 0x8e,
	0xbc, 0x51, 0xb2, 0x95, 0x6c, 0x6a, 0x0e, 0x6f, 0x5f, 0x48, 0x59, 0x54, 0x18, 0x18, 0xca, 0xba,
	0x47, 0x90, 0xd6, 0x03, 0x4d, 0xf8, 0x31, 0xcc, 0x04, 0xbe, 0x3a, 0xd4, 0x2d, 0xdb, 0x81, 0x1d,
	0x35, 0xe5, 0x0d, 0x07, 0xd7, 0x3a, 0x58, 0xc7, 0x85, 0x18, 0xe9, 0xe3, 0x13, 0x4c, 0x55, 0xfe,
	0x74, 0xff, 0xc8, 0x13, 0x31, 0x06, 0x93, 0x7b, 0x5a, 0xa0, 0xfb, 0x6f, 0xac, 0xb9, 0xfb, 0x17,
	0x98, 0x0b, 0xd4, 0x8d, 0xac, 0x35, 0xb2, 0x13, 0xd8, 0x0a, 0x75, 0x57, 0xb5, 0xe6, 0xbf, 0x65,
	0xb8, 0xe5, 0x54, 0x83, 0x7f, 0x6b, 0xf0, 0xa8, 0x1e, 0xc4, 0x38, 0x13, 0x5e, 0xc1, 0x89, 0x65,
	0x5f, 0xa2, 0x4e, 0x68, 0x03, 0x16, 0xc0, 0x8a, 0x82, 0x48, 0xb3, 0x35, 0xbd, 0xe3, 0x63, 0x5d,
	0x6f, 0xf3, 0x63, 0xca, 0xcb, 0x6c, 0xc3, 0xe7, 0x77, 0x00, 0x00, 0x00, 0xff, 0xff, 0xa1, 0xad,
	0x45, 0x08, 0x04, 0x01, 0x00, 0x00,
}
